_BASE_: [
  '../datasets/coco_instance.yml',
  '../runtime.yml',
  '_base_/optimizer_500e.yml',
  '_base_/yolov8_ins_cspdarknet.yml',
  '_base_/yolov8_ins_reader.yml',
]
depth_mult: 0.33
width_mult: 0.25

log_iter: 1
snapshot_epoch: 10
weights: output/yolov8_ins_n_500e_coco/model_final



metric: COCO
num_classes: 80

TrainDataset:
  name: COCODataSet
  image_dir: val2017
  anno_path: annotations/instances_val2017.json
  dataset_dir: dataset/coco
  data_fields: ['image', 'gt_bbox', 'gt_class', 'gt_poly', 'is_crowd']

EvalDataset:
  name: COCODataSet
  image_dir: val2017
  anno_path: annotations/instances_val2017.json
  anno_path: annotations/instances_val2017_rand24.json
  #anno_path: annotations/instances_val2017_8img.json
  dataset_dir: dataset/coco


input_height: &input_height 640
input_width: &input_width 640
input_size: &input_size [*input_height, *input_width]
mosaic_epoch: &mosaic_epoch -1 #490 # last 10 epochs close mosaic, totally 500 epochs as default

worker_num: 0
TrainReader:
  sample_transforms:
    - Decode: {}
    #- MosaicPerspective: {mosaic_prob: 1.0, target_size: *input_size}
    - Resize: {target_size: *input_size, keep_ratio: True, interp: 1}
    - Pad: {size: *input_size, fill_value: [114., 114., 114.]}

    # - RandomHSV: {hgain: 0.015, sgain: 0.7, vgain: 0.4}
    # - RandomFlip: {}
    - Poly2Mask: {del_poly: True}
  batch_transforms:
    - NormalizeImage: {mean: [0., 0., 0.], std: [1., 1., 1.], norm_type: none}
    - Permute: {}
    - PadGT: {}
    # - PadMaskBatch: {pad_to_stride: -1, return_pad_mask: True}
  batch_size: 8
  shuffle: True
  drop_last: True
  use_shared_memory: True
  collate_batch: False
  mosaic_epoch: *mosaic_epoch


# EvalReader:
#   sample_transforms:
#     - Decode: {}
#     - Resize: {target_size: *input_size, keep_ratio: True, interp: 1}
#     - Pad: {size: *input_size, fill_value: [114., 114., 114.]}
#     - NormalizeImage: {mean: [0., 0., 0.], std: [1., 1., 1.], norm_type: none}
#     - Permute: {}
#   batch_size: 1


# # EvalReader:
# #   sample_transforms:
# #     - Decode: {}
# #     - Resize: {target_size: *input_size, keep_ratio: True, interp: 1}
# #     # - Pad: {size: *input_size, fill_value: [114., 114., 114.]}
# #     - NormalizeImage: {mean: [0., 0., 0.], std: [1., 1., 1.], norm_type: none}
# #     - Permute: {}
# #   batch_transforms:
# #     - PadMaskBatch: {pad_to_stride: 32, return_pad_mask: False}
# #   batch_size: 1
